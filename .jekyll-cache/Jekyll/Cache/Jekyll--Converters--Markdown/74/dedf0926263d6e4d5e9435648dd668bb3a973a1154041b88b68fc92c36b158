I"=V<h1 class="no_toc" id="ch1-헬로-파이썬">Ch1 헬로 파이썬</h1>

<h2 class="no_toc text-delta" id="table-of-contents">Table of contents</h2>

<ol id="markdown-toc">
  <li><a href="#14-파이썬-스크립트-파일" id="markdown-toc-14-파이썬-스크립트-파일">1.4 파이썬 스크립트 파일</a>    <ol>
      <li><a href="#142-클래스" id="markdown-toc-142-클래스">1.4.2 클래스</a>        <ol>
          <li><a href="#구조" id="markdown-toc-구조">구조</a></li>
          <li><a href="#__init__" id="markdown-toc-__init__">__init__</a></li>
          <li><a href="#예제" id="markdown-toc-예제">예제</a></li>
        </ol>
      </li>
    </ol>
  </li>
  <li><a href="#15-넘파이" id="markdown-toc-15-넘파이">1.5 넘파이</a>    <ol>
      <li><a href="#151-넘파이-가져오기" id="markdown-toc-151-넘파이-가져오기">1.5.1 넘파이 가져오기</a></li>
      <li><a href="#152-넘파이-배열-생성하기" id="markdown-toc-152-넘파이-배열-생성하기">1.5.2 넘파이 배열 생성하기</a></li>
      <li><a href="#153-넘파이의-산술-연산" id="markdown-toc-153-넘파이의-산술-연산">1.5.3 넘파이의 산술 연산</a></li>
      <li><a href="#154-넘파이의-n차원-배열" id="markdown-toc-154-넘파이의-n차원-배열">1.5.4 넘파이의 N차원 배열</a></li>
      <li><a href="#155-브로드캐스트" id="markdown-toc-155-브로드캐스트">1.5.5 브로드캐스트</a></li>
      <li><a href="#156-원소-접근" id="markdown-toc-156-원소-접근">1.5.6 원소 접근</a></li>
    </ol>
  </li>
  <li><a href="#16-matplotlib" id="markdown-toc-16-matplotlib">1.6 matplotlib</a>    <ol>
      <li><a href="#161-단순한-그래프-그리기" id="markdown-toc-161-단순한-그래프-그리기">1.6.1 단순한 그래프 그리기</a></li>
      <li><a href="#162-pyplot의-기능" id="markdown-toc-162-pyplot의-기능">1.6.2 pyplot의 기능</a></li>
      <li><a href="#163-이미지-표시하기" id="markdown-toc-163-이미지-표시하기">1.6.3 이미지 표시하기</a></li>
    </ol>
  </li>
  <li><a href="#17-정리" id="markdown-toc-17-정리">1.7 정리</a>    <ol>
      <li><a href="#후속-공부" id="markdown-toc-후속-공부">후속 공부</a></li>
    </ol>
  </li>
</ol>

<hr />

<h2 id="14-파이썬-스크립트-파일">1.4 파이썬 스크립트 파일</h2>

<h3 id="142-클래스">1.4.2 클래스</h3>

<ul>
  <li>
    <p>독자적인 자료형을 만들 수 있다.</p>
  </li>
  <li>
    <p>전용 함수(메서드)와 속성을 정의할 수 있다.</p>
  </li>
</ul>

<h5 id="구조">구조</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">클래스</span> <span class="n">이름</span><span class="p">:</span>
	<span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">인수</span><span class="p">,</span> <span class="p">...):</span>		<span class="c1"># 생성자
</span>		<span class="p">...</span>
	<span class="k">def</span> <span class="nf">메서드</span> <span class="n">이름</span> <span class="mi">1</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">인수</span><span class="p">,</span> <span class="p">...):</span>	<span class="c1"># 메서드 1
</span>		<span class="p">...</span>
	<span class="k">def</span> <span class="nf">메서드</span> <span class="n">이름</span> <span class="mi">2</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">인수</span><span class="p">,</span> <span class="p">...):</span>	<span class="c1"># 메서드 2
</span>		<span class="p">...</span>
</code></pre></div></div>

<h5 id="__init__">__init__</h5>

<ul>
  <li>
    <p>클래스를 초기화하는 방법을 정의한다.</p>
  </li>
  <li>
    <p>생성자라고도 한다.</p>
  </li>
  <li>
    <p>클래스의 인스턴스가 만들어질 때 한 번만 불린다.</p>
  </li>
  <li>
    <p>메서드의 첫 번째 인수로 자신(자신의 인스턴스)을 나타내는 <code class="language-plaintext highlighter-rouge">self</code>를 명시적으로 쓴다.</p>
  </li>
</ul>

<h5 id="예제">예제</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Man</span><span class="p">:</span>
	<span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
		<span class="k">print</span><span class="p">(</span><span class="s">"Initialized!"</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">hello</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="k">print</span><span class="p">(</span><span class="s">"Hello "</span> <span class="o">+</span> <span class="bp">self</span><span class="p">.</span><span class="n">name</span> <span class="o">+</span> <span class="s">"!"</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">goodbye</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="k">print</span><span class="p">(</span><span class="s">"Good-bye "</span> <span class="o">+</span> <span class="bp">self</span><span class="p">.</span><span class="n">name</span> <span class="o">+</span> <span class="s">"!"</span><span class="p">)</span>

<span class="n">m</span> <span class="o">=</span> <span class="n">Man</span><span class="p">(</span><span class="s">"David"</span><span class="p">)</span>
<span class="n">m</span><span class="p">.</span><span class="n">hello</span><span class="p">()</span>
<span class="n">m</span><span class="p">.</span><span class="n">goodbye</span><span class="p">()</span>
</code></pre></div></div>

<hr />

<h2 id="15-넘파이">1.5 넘파이</h2>

<ul>
  <li>넘파이의 배열 클래스 <code class="language-plaintext highlighter-rouge">numpy.array</code>에 배열과 행렬 계산에 편리한 메서드 많음</li>
</ul>

<h3 id="151-넘파이-가져오기">1.5.1 넘파이 가져오기</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
</code></pre></div></div>

<h3 id="152-넘파이-배열-생성하기">1.5.2 넘파이 배열 생성하기</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># interpreter
</span><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="nb">type</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">numpy.array</code> : 리스트를 인수로 받아 넘파이 배열(<code class="language-plaintext highlighter-rouge">numpy.ndarray</code>)을 반환한다.</li>
</ul>

<h3 id="153-넘파이의-산술-연산">1.5.3 넘파이의 산술 연산</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># interpreter
</span><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">])</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mf">2.0</span><span class="p">,</span> <span class="mf">4.0</span><span class="p">,</span> <span class="mf">6.0</span><span class="p">])</span>
<span class="n">x</span> <span class="o">+</span> <span class="n">y</span>
<span class="n">x</span> <span class="o">-</span> <span class="n">y</span>
<span class="n">x</span> <span class="o">*</span> <span class="n">y</span>
<span class="n">x</span> <span class="o">/</span> <span class="n">y</span>
</code></pre></div></div>

<ul>
  <li>
    <p>원소별(element-wise) 산술연산 수행</p>
  </li>
  <li>
    <p>원소 수가 같을 때만 산술 연산할 수 있음</p>
  </li>
</ul>

<h3 id="154-넘파이의-n차원-배열">1.5.4 넘파이의 N차원 배열</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># interpreter
</span><span class="n">A</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">]])</span>
<span class="k">print</span><span class="p">(</span><span class="n">A</span><span class="p">)</span>
<span class="n">A</span><span class="p">.</span><span class="n">shape</span>
<span class="n">A</span><span class="p">.</span><span class="n">dtype</span>
<span class="n">B</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">6</span><span class="p">]])</span>
<span class="n">A</span> <span class="o">+</span> <span class="n">B</span>
<span class="n">A</span> <span class="o">*</span> <span class="n">B</span>
</code></pre></div></div>

<ul>
  <li>
    <p><code class="language-plaintext highlighter-rouge">ndarray.shape</code> : 배열의 형상 출력</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">ndarray.dtype</code> : 배열의 원소의 자료형 출력</p>
  </li>
</ul>

<blockquote>
  <ul>
    <li>
      <p>1차원 배열 : 벡터(vector)</p>
    </li>
    <li>
      <p>2차원 배열 : 행렬(matrix)</p>
    </li>
    <li>
      <p>벡터와 행렬을 일반화한 것 : 텐서(tensor)</p>
    </li>
  </ul>
</blockquote>

<h3 id="155-브로드캐스트">1.5.5 브로드캐스트</h3>

<ul>
  <li>
    <p>형상이 다른 배열끼리 산술연산할 수 있도록 하는 기능</p>
  </li>
  <li>
    <p>스칼라값과 n차원 배열의 산술연산에서 스칼라값을 n차원 배열로 확장한 후 연산</p>
  </li>
  <li>
    <p>저차원 배열과 고차원 배열의 산술연산에서 저차원 배열을 고차원 배열로 확장한 후 연산</p>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># interpreter
</span><span class="n">A</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">]])</span>
<span class="n">B</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">])</span>
<span class="n">A</span> <span class="o">*</span> <span class="mi">10</span>
<span class="n">B</span> <span class="o">*</span> <span class="mi">10</span>
<span class="n">A</span> <span class="o">*</span> <span class="n">B</span>
</code></pre></div></div>

<h3 id="156-원소-접근">1.5.6 원소 접근</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># interpreter
</span><span class="n">X</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">51</span><span class="p">,</span> <span class="mi">55</span><span class="p">],</span> <span class="p">[</span><span class="mi">14</span><span class="p">,</span> <span class="mi">19</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">]])</span>
<span class="k">print</span><span class="p">(</span><span class="n">X</span><span class="p">)</span>
<span class="n">X</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<span class="n">X</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span>
<span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">X</span><span class="p">:</span>
	<span class="k">print</span><span class="p">(</span><span class="n">row</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>인덱스로 접근</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">X</span> <span class="o">=</span> <span class="n">X</span><span class="p">.</span><span class="n">flatten</span><span class="p">()</span>			<span class="c1"># X를 1차원 배열로 변환(평탄화)
</span><span class="k">print</span><span class="p">(</span><span class="n">X</span><span class="p">)</span>
<span class="n">X</span><span class="p">[</span><span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">])]</span>	<span class="c1"># 인덱스가 0, 2, 4인 원소 얻기
</span><span class="n">X</span> <span class="o">&gt;</span> <span class="mi">15</span>
<span class="n">X</span><span class="p">[</span><span class="n">X</span><span class="o">&gt;</span><span class="mi">15</span><span class="p">]</span>
</code></pre></div></div>

<ul>
  <li>
    <p>인덱스를 배열로 지정해 한 번에 여러 원소에 접근</p>
  </li>
  <li>
    <p>특정 조건을 만족하는 원소를 얻을 수 있다.</p>
  </li>
  <li>
    <p>bool 배열을 사용해 True에 해당하는 원소에만 접근할 수 있다.</p>
  </li>
</ul>

<blockquote>
  <p>넘파이의 주된 처리는 C와 C++로 구현되어 성능을 해치지 않으면서 파이썬의 편리한 문법을 사용할 수 있다.</p>
</blockquote>

<hr />

<h2 id="16-matplotlib">1.6 matplotlib</h2>

<ul>
  <li>그래프 그리기와 데이터 시각화를 위한 라이브러리</li>
</ul>

<h3 id="161-단순한-그래프-그리기">1.6.1 단순한 그래프 그리기</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">%</span><span class="n">matplotlib</span> <span class="n">tk</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="c1"># 데이터 준비
</span><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mf">0.1</span><span class="p">)</span>	<span class="c1"># 0에서 6까지 0.1 간격으로 넘파이 배열 생성
</span><span class="n">y</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">sin</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>

<span class="c1"># 그래프 그리기
</span><span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<blockquote>
  <p>%matplotlib tk : tkinter UI에 그래프 출력하기 위한 magic command</p>
</blockquote>

<ul>
  <li>
    <p><code class="language-plaintext highlighter-rouge">matplotlib.pyplot.plot</code> : 그래프 그리기</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">matplotlib.pyplot.show</code> : 그래프를 화면에 출력</p>
  </li>
</ul>

<h3 id="162-pyplot의-기능">1.6.2 pyplot의 기능</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">%</span><span class="n">matplotlib</span> <span class="n">tk</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">numpy</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="c1"># 데이터 준비
</span><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mf">0.1</span><span class="p">)</span>	<span class="c1"># 0에서 6까지 0.1 간격으로 생성
</span><span class="n">y1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">sin</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="n">y2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">cos</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>

<span class="c1"># 그래프 그리기
</span><span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y1</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s">"sin"</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y2</span><span class="p">,</span> <span class="n">linestyle</span><span class="o">=</span><span class="s">"--"</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s">"cos"</span><span class="p">)</span>	<span class="c1"># cos 함수 점선으로 그리기
</span><span class="n">plt</span><span class="p">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">"x"</span><span class="p">)</span>	<span class="c1"># x축 이름
</span><span class="n">plt</span><span class="p">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">"y"</span><span class="p">)</span>	<span class="c1"># y축 이름
</span><span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'sin &amp; cos'</span><span class="p">)</span>	<span class="c1"># 제목
</span><span class="n">plt</span><span class="p">.</span><span class="n">legend</span><span class="p">()</span>	<span class="c1"># 그래프 범례 표시
</span><span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<h3 id="163-이미지-표시하기">1.6.3 이미지 표시하기</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.image</span> <span class="kn">import</span> <span class="n">imread</span>

<span class="n">img</span> <span class="o">=</span> <span class="n">imread</span><span class="p">(</span><span class="s">'/mnt/c/Users/dajin/Pictures/01 portrait/07 meenoi/6.jpg'</span><span class="p">)</span>	<span class="c1"># 이미지 읽어오기
</span>
<span class="n">plt</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">img</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<hr />

<h2 id="17-정리">1.7 정리</h2>

<h3 id="후속-공부">후속 공부</h3>

<ul>
  <li>
    <p>처음 시작하는 파이썬(한빛미디어, 2015)</p>

    <ul>
      <li>파이썬 프로그래밍을 기초부터 응용까지 친절하게 설명해주는 실천적인 입문서</li>
    </ul>
  </li>
  <li>
    <p>파이썬 라이브러리를 활용한 데이터 분석(한빛미디어, 2013)</p>

    <ul>
      <li>넘파이</li>
    </ul>
  </li>
  <li>
    <p>Scipy 강의 노트(웹사이트)</p>

    <ul>
      <li>과학 기술에서의 계산을 주제로 넘파이와 matplotlib을 잘 설명함</li>
    </ul>
  </li>
</ul>
:ET